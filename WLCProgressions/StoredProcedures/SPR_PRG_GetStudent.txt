CREATE PROCEDURE [dbo].[SPR_PRG_GetStudent]
	@System NVARCHAR(20),
    @AcademicYear NVARCHAR(5),
    @StudentRef NVARCHAR(50),
	@CourseID INT
    
AS
BEGIN
	SET XACT_ABORT, NOCOUNT ON;
	SET DATEFORMAT ymd;

    DECLARE @SQLString NVARCHAR(MAX);
    DECLARE @SQLParams NVARCHAR(MAX);

	--DECLARE @System VARCHAR(50) = 'ProSolutionTraining'
	--DECLARE @AcademicYear VARCHAR(5) = '20/21'
	--DECLARE @StudentRef VARCHAR(50) = '11000000'
	--DECLARE @CourseID INT = 32699
	
	DECLARE @DestinationYear NVARCHAR(5)
    SET @DestinationYear = 
        ( 
            SELECT
                AcademicYear = 
                    CASE 
                        WHEN MONTH ( GETDATE() ) >= 10 THEN CAST ( YEAR ( GETDATE() ) - 2000 AS NVARCHAR(2) ) + '/' + CAST ( YEAR ( GETDATE() ) - 1999 AS NVARCHAR(2) )
                        ELSE CAST ( YEAR ( GETDATE() ) - 2001 AS NVARCHAR(2) ) + '/' + CAST ( YEAR ( GETDATE() ) - 2000 AS NVARCHAR(2) )
                    END 
        )

    SET @SQLString = 
    N'SELECT
		SystemDatabase = @System,
        AcademicYear = SD.AcademicYearID,
		CollegeCode = RTRIM ( CGRP.Code ),
		CollegeName = CGRP.Name,
		SiteCode = STE.Code,
		SiteName = STE.Description,
		FacCode = RTRIM ( FAC.Code ),
		FacName = FAC.Name,
		TeamCode = RTRIM ( TEAM.Code ),
		TeamName = TEAM.Name,
		CourseCode = CRS.Code,
		CourseTitle = CRS.Name,
        StudentRef = RTRIM ( SD.RefNo ),
		Surname = SD.Surname,
		Forename = SD.FirstForename,
		DOB = SD.DateOfBirth,
		Age31stAug = CAST ( FLOOR ( DATEDIFF ( DAY, COALESCE ( SD.DateOfBirth, CAST ( ''20'' + LEFT ( SD.AcademicYearID, 2 ) + ''-09-01'' AS DATETIME2 ) ), CAST ( ''20'' + LEFT ( SD.AcademicYearID, 2 ) + ''-09-01'' AS DATETIME2 ) ) / 365.23076923074 ) AS int ),
		CompletionStatusCode = ''1'',
		CompletionStatusName = ''Continuing'',
		ClassesCourses = 0,
        ClassesPlanned = 0,
        ClassesCounted = 0,
        ClassesMarked = 0,
        ClassesUnmarked = 0,
        ClassesPresent = 0,
        ClassesAbsent = 0,
        ClassesNeutral = 0,
        ClassesAuthAbsence = 0,
        ClassesLate = 0,
        AttendPer = CAST ( 0 AS FLOAT ),
        RiskCode = 0,
        RiskName = ''No Risk'',
        RiskColour = ''Green'',
		OnTrackToAchieveCode = ''Not Set'',
		OnTrackToAchieveColour = ''Green'',
		OnTrackToAchieveTerm = ''None'',
		NumAppsNextYear = 0,
        AppliedCoursesNextYear = '''',
        NumEnrolsNextYear = 0,
        EnrolledCoursesNextYear = '''',
        DestinationCode = DES.LocalDestinationID,
        DestinationName = DES.Description,
		DestinationIsActual = CAST ( OC.IsActualDestination AS INT ),
        DestinationChanged = CAST ( 0 AS bit ),
		ProgressLearner = CAST ( 0 AS bit ),
        OfferType = 0,
        OfferCondition = 0,
		IsReadyToEnrol = CAST ( 0 AS bit ),
		ReadyToEnrolOption = '''',
		HasAlreadyApplied = 
			CAST ( 
				CASE
					WHEN PRG.OfferingID IS NOT NULL THEN 1
					ELSE 0
				END
			AS BIT )
	FROM ' + @System + '.dbo.StudentDetail SD
    INNER JOIN ' + @System + '.dbo.Offering CRS
        ON CRS.OfferingID = @CourseID
	INNER JOIN ' + @System + '.dbo.Site STE
		ON STE.SiteID = CRS.SiteID
	INNER JOIN ' + @System + '.dbo.CollegeLevel TEAM
		ON TEAM.SID = CRS.SID
	INNER JOIN ' + @System + '.dbo.CollegeLevel FAC
		ON FAC.SID = TEAM.ParentSID
	INNER JOIN ' + @System + '.dbo.CollegeLevel CGRP
		ON CGRP.SID = FAC.ParentSID
    LEFT JOIN (
        SELECT
            OC.StudentID,
            OC.LocalDestinationID,
			OC.IsActualDestination,
            RowNum = 
                ROW_NUMBER () OVER (
                    PARTITION BY
                        OC.StudentID
                    ORDER BY
                        OC.IsActualDestination,
                        CASE WHEN OC.EndDate IS NULL THEN 1 ELSE 2 END,
                        OC.CollectionDate DESC,
                        OC.StartDate DESC
                )
        FROM ' + @System + '.dbo.StudentOutcome OC
        WHERE
            OC.ReturnYearID = @DestinationYear
    ) OC
        ON OC.StudentID = SD.StudentID
        AND OC.RowNum = 1
    LEFT JOIN ' + @System + '.dbo.LocalDestination DES
        ON DES.LocalDestinationID = COALESCE ( OC.LocalDestinationID, SD.LocalDestinationID )
	LEFT JOIN (
		SELECT
			SD.StudentDetailID,
			APPC.OfferingID,
			APPC.OfferingGroupID
		FROM ' + @System + '.dbo.StudentDetail SD
		INNER JOIN ' + @System + '.dbo.Application APP
			ON APP.StudentDetailID = SD.StudentDetailID
		INNER JOIN ' + @System + '.dbo.ApplicationCourse APPC
			ON APPC.ApplicationID = APP.ApplicationID
			AND APPC.OfferingID = @CourseID
		WHERE
			SD.AcademicYearID = @AcademicYear
			AND SD.RefNo = @StudentRef
			AND APPC.OfferingID = @CourseID
	) PRG
		ON PRG.StudentDetailID = SD.StudentDetailID
	WHERE
		SD.AcademicYearID = @AcademicYear
		AND SD.RefNo = @StudentRef
	ORDER BY
		SD.Surname,
		SD.FirstForename,
		SD.RefNo';

    SET @SQLParams = 
        N'@System NVARCHAR(20),
        @AcademicYear NVARCHAR(5),
		@DestinationYear NVARCHAR(5),
        @StudentRef NVARCHAR(50),
		@CourseID INT';

    EXECUTE sp_executesql 
        @SQLString, 
        @SQLParams, 
        @System = @System, 
        @AcademicYear = @AcademicYear, 
		@DestinationYear = @DestinationYear,
        @StudentRef = @StudentRef,
		@CourseID = @CourseID;
END