CREATE PROCEDURE [dbo].[SPR_PRG_UpdateDestination]
	@System NVARCHAR(50),
    @AcademicYear NVARCHAR(5),
    @StudentRef NVARCHAR(50),
	@Destination INT,
    @Username NVARCHAR(200)
AS
BEGIN
	SET NOCOUNT ON;
    -- DECLARE @System NVARCHAR(50) = 'ProSolutionTraining';
    -- DECLARE @AcademicYear NVARCHAR(5) = '18/19'
    -- DECLARE @Username NVARCHAR(200) = 'r.wilson'
    -- DECLARE @StudentRef VARCHAR(50) = '11033452'
    -- DECLARE @Destination INT = NULL

    DECLARE @SQLString NVARCHAR(MAX);
    DECLARE @SQLParams NVARCHAR(MAX);

    DECLARE @DestinationID INT;
    DECLARE @DestinationCode NVARCHAR(50) = '';
    DECLARE @DestinationDescription NVARCHAR(255) = '';
    DECLARE @ErrorMsg NVARCHAR(255) = '';

    --Override academic year so destination record would be recorded in current year up to R14 ILR Return - requested by Andrea
    --Still waiting for confirmation this is correct approach
    SET @AcademicYear = 
        ( 
            SELECT
                AcademicYear = 
                    CASE 
                        WHEN MONTH ( GETDATE() ) >= 10 THEN CAST ( YEAR ( GETDATE() ) - 2000 AS NVARCHAR(2) ) + '/' + CAST ( YEAR ( GETDATE() ) - 1999 AS NVARCHAR(2) )
                        ELSE CAST ( YEAR ( GETDATE() ) - 2001 AS NVARCHAR(2) ) + '/' + CAST ( YEAR ( GETDATE() ) - 2000 AS NVARCHAR(2) )
                    END 
        )

    --Default destination to 44 if not set (Other FE* (Full-Time))
    -- IF @Destination IS NULL
    --     SET @Destination = 44

    IF @Destination IS NOT NULL
        
        BEGIN
            SET @SQLString = 
                N'SELECT
                    @DestinationIDOUT = DES.LocalDestinationID,
                    @DestinationCodeOUT = RTRIM ( DES.Code ),
                    @DestinationDescriptionOUT = DES.Description
                FROM ' + @System + '.dbo.LocalDestination DES
                WHERE
                    DES.Enabled = 1
                    AND DES.LocalDestinationID = @Destination';

            SET @SQLParams = 
                N'@Destination INT,
                @DestinationIDOUT INT OUTPUT,
                @DestinationCodeOUT NVARCHAR(50) OUTPUT,
                @DestinationDescriptionOUT NVARCHAR(255) OUTPUT';

            EXECUTE sp_executesql 
                @SQLString, 
                @SQLParams, 
                @Destination = @Destination, 
                @DestinationIDOUT = @DestinationID OUTPUT, 
                @DestinationCodeOUT = @DestinationCode OUTPUT,
                @DestinationDescriptionOUT = @DestinationDescription OUTPUT;
        END

    IF @@ROWCOUNT <> 1 AND @Destination IS NOT NULL
        BEGIN
            SET @ErrorMsg = CAST ( @Destination AS VARCHAR(10) ) + ' is not a valid destination code in ' + @System + ' system';
            RAISERROR ( @ErrorMsg, 16, 1 ) WITH LOG;
        END
    ELSE
        BEGIN
            -- DECLARE @StudentRef VARCHAR(50) = '11000000'
            -- DECLARE @Destination INT = 27
            -- DECLARE @Username VARCHAR(100) = 'r.wilson'
            -- DECLARE @DestinationCode VARCHAR(50) = '';
            -- DECLARE @DestinationDescription VARCHAR(255) = '';
            
            DECLARE @AuditRecordInserted TABLE (
                AuditTrailID INT
            )

            SET @SQLString = 
                N'INSERT INTO ' + @System + '.dbo._CCC_AuditTrail 
                (
                    TableName,
                    WhereClause,
                    RowDescription,
                    ChangeInfo,
                    ChangeType,
                    ModifiedBy,
                    ModifiedOn
                )
                OUTPUT INSERTED.AuditTrailID
                SELECT
                    TableName = ''StudentDetail'',
                    WhereClause = ''[StudentDetailID] = '' + CAST ( SD.StudentDetailID AS VARCHAR(50) ),
                    RowDescription = SD.Surname + '' , '' + SD.FirstForename + '' ('' + RTRIM ( SD.RefNo ) + ''), '' + CAST ( CAST ( FLOOR ( DATEDIFF ( DAY, COALESCE ( SD.DateOfBirth, CAST ( ''20'' + LEFT ( SD.AcademicYearID, 2 ) + ''-09-01'' AS DATETIME2 ) ), CAST ( ''20'' + LEFT ( SD.AcademicYearID, 2 ) + ''-09-01'' AS DATETIME2 ) ) / 365.23076923074 ) AS int ) AS VARCHAR(50) ) + '', '' + SD.AcademicYearID,
                    ChangeInfo = ''Record Updated: LocalDestinationID: Changed from '''''' + COALESCE ( CAST ( SD.LocalDestinationID AS VARCHAR(50) ), '''' ) + '''''' ('' + COALESCE ( RTRIM ( DES.Code ), '''' ) + '' - '' + COALESCE ( DES.Description, '''' ) + '') to '''''' + COALESCE ( CAST ( @Destination AS VARCHAR(50) ), '''' ) + '''''' ('' + COALESCE ( @DestinationCode, '''' ) + '' - '' + COALESCE ( @DestinationDescription, '''' ) + '''''')'',
                    ChangeType = 2,
                    ModifiedBy = @Username,
                    ModifiedOn = GETDATE()
                FROM ' + @System + '.dbo.StudentDetail SD
                LEFT JOIN ' + @System + '.dbo.LocalDestination DES
                    ON DES.LocalDestinationID = SD.LocalDestinationID
                WHERE
                    SD.AcademicYearID = @AcademicYear
                    AND SD.RefNo = @StudentRef';

            SET @SQLParams = 
                N'@System NVARCHAR(50),
                @AcademicYear NVARCHAR(5),
                @StudentRef NVARCHAR(50),
                @Destination INT,
                @DestinationCode NVARCHAR(50),
                @DestinationDescription NVARCHAR(255),
                @Username NVARCHAR(200)';

            INSERT INTO @AuditRecordInserted
            EXECUTE sp_executesql 
                @SQLString, 
                @SQLParams, 
                @System = @System, 
                @AcademicYear = @AcademicYear, 
                @StudentRef = @StudentRef, 
                @Destination = @Destination,
                @DestinationCode = @DestinationCode,
                @DestinationDescription = @DestinationDescription,
                @Username = @Username;

            DECLARE @AuditTrailID INT = (SELECT AuditTrailID FROM @AuditRecordInserted)

            IF @AuditTrailID IS NULL
                BEGIN
                    SET @ErrorMsg = COALESCE ( CAST ( @Destination AS VARCHAR(10) ), '' ) + ' is not a valid destination code in ' + @System + ' system';
                    RAISERROR ( @ErrorMsg, 16, 1 ) WITH LOG;
                END
            ELSE
                BEGIN
                    --Update local destination (in Student Detail Record)
                    SET @SQLString = 
                        N'UPDATE SD
                        SET
                            SD.LocalDestinationID = @Destination
                        FROM ' + @System + '.dbo.StudentDetail SD
                        WHERE
                            SD.AcademicYearID = @AcademicYear
                            AND SD.RefNo = @StudentRef';

                    SET @SQLParams = 
                        N'@System NVARCHAR(50),
                        @AcademicYear NVARCHAR(5),
                        @StudentRef NVARCHAR(50),
                        @Destination INT';

                    EXECUTE sp_executesql 
                        @SQLString, 
                        @SQLParams, 
                        @System = @System, 
                        @AcademicYear = @AcademicYear, 
                        @StudentRef = @StudentRef, 
                        @Destination = @Destination;
                    
                    --Delete any existing ILR destinations with today's date (i.e. if person has corrected their choice)
                    SET @SQLString = 
                        N'DELETE OC
                        FROM ' + @System + '.dbo.StudentDetail SD
                        INNER JOIN ' + @System + '.dbo.StudentOutcome OC
                            ON OC.StudentID = SD.StudentID
                            AND OC.ReturnYearID = SD.AcademicYearID
                        WHERE
                            SD.RefNo = @StudentRef
                            AND SD.AcademicYearID = @AcademicYear
                            AND CAST ( OC.CollectionDate AS DATE ) = CAST ( GETDATE() AS DATE )';

                    SET @SQLParams = 
                        N'@System NVARCHAR(50),
                        @AcademicYear NVARCHAR(5),
                        @StudentRef NVARCHAR(50)';

                    EXECUTE sp_executesql 
                        @SQLString, 
                        @SQLParams, 
                        @System = @System, 
                        @AcademicYear = @AcademicYear, 
                        @StudentRef = @StudentRef;

                    --End existing ILR destination

                    SET @SQLString = 
                        N'UPDATE OC
                        SET
                            OC.EndDate = DATEADD( DAY, -1, GETDATE() ), --Yesterday
                            OC.LastModifiedBy = @Username,
                            OC.LastModifiedDate = GETDATE()
                        FROM ' + @System + '.dbo.StudentDetail SD
                        INNER JOIN ' + @System + '.dbo.StudentOutcome OC
                            ON OC.StudentID = SD.StudentID
                            AND OC.ReturnYearID = SD.AcademicYearID
                        WHERE
                            SD.RefNo = @StudentRef
                            AND SD.AcademicYearID = @AcademicYear
                            AND OC.EndDate IS NULL --Is not already ended';

                    SET @SQLParams = 
                        N'@System NVARCHAR(50),
                        @AcademicYear NVARCHAR(5),
                        @StudentRef NVARCHAR(50),
                        @Username NVARCHAR(200)';

                    EXECUTE sp_executesql 
                        @SQLString, 
                        @SQLParams, 
                        @System = @System, 
                        @AcademicYear = @AcademicYear, 
                        @StudentRef = @StudentRef, 
                        @Username = @Username;

                    IF @Destination IS NOT NULL
                    BEGIN
                        --Insert New ILR Destination (if not blank)

                        SET @SQLString = 
                            N'INSERT INTO ' + @System + '.dbo.StudentOutcome
                            (
                                LocalDestinationID,
                                StartDate,
                                CollectionDate,
                                IncludeInILR,
                                StudentID,
                                ReturnYearID,
                                IsActualDestination,
                                CreatedBy,
                                CreatedDate,
								UserDefined1
                            )
                            SELECT
                                LocalDestinationID = @Destination,
                                StartDate = GETDATE(),
                                CollectionDate = GETDATE(),
                                IncludeInILR = 1,
                                StudentID = SD.StudentID,
                                ReturnYearID = @AcademicYear,
                                IsActualDestination = 0,
                                CreatedBy = @Username,
                                CreatedDate = GETDATE(),
								UserDefined1 = ''P&Dscreen''
                            FROM ' + @System + '.dbo.StudentDetail SD
                            WHERE
                                SD.RefNo = @StudentRef
                                AND SD.AcademicYearID = @AcademicYear';

                        SET @SQLParams = 
                            N'@System NVARCHAR(50),
                            @AcademicYear NVARCHAR(5),
                            @StudentRef NVARCHAR(50),
                            @Destination INT,
                            @Username NVARCHAR(200)';

                        EXECUTE sp_executesql 
                            @SQLString, 
                            @SQLParams, 
                            @System = @System, 
                            @AcademicYear = @AcademicYear, 
                            @StudentRef = @StudentRef, 
                            @Destination = @Destination,
                            @Username = @Username;
                    END

                    PRINT 'Updated student ' + @StudentRef + ' to destination code ' + CAST ( @Destination AS VARCHAR(10) ) + ' in ' + @System + ' system';
                END
        END
END